@using BlazorApp.Shared.Model.Question

<EditForm Model="@questionModel" class="modal-form">
    <div class="form-row">
        <div class="form-group col-md-8">
            <label for="questionType">Type</label>
            <InputSelect class="form-control" id="questionType" @bind-Value="questionModel.QuestionType">
                <option value="">- Select One -</option>
                <option value="Multiple Choice">Multiple Choice</option>
                <option value="Fill in the Blank">Fill in the Blank</option>
                <option value="Open Response">Open Response</option>
            </InputSelect>
        </div>
        <div class="form-group col-md-4">
            <label for="questionOrder">Question #</label>
            <InputNumber type="number" class="form-control" id="questionOrder" @bind-Value="questionModel.Order" readonly />
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-md-12">
            <label for="questionText">Question</label>
            <InputTextArea class="form-control" id="questionText" rows="6" @bind-Value="questionModel.Text"></InputTextArea>
        </div>
    </div>

    <button @onclick="Save" class="btn btn-primary">Save</button>
    <button @onclick="Cancel" class="btn btn-secondary">Cancel</button>
</EditForm>

@code {
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }

    [Parameter] public string QuestionId { get; set; }

    [Parameter] public int QuestionCount { get; set; }

    private Question questionModel = new Question();

    protected override void OnInitialized()
    {
        questionModel.Order = QuestionCount + 1;
    }

    void Save()
    {
        BlazoredModal.Close(ModalResult.Ok<IQuestion>(questionModel));
    }

    void Cancel() 
    {
        BlazoredModal.Cancel();
    }
}